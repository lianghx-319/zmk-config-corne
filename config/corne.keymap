/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

//#include <dt-bindings/zmk/mouse.h> /* to be able to use keyboard mouse */
/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    mosi-pin = <6>;

    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.

    sck-pin = <5>;
    miso-pin = <7>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>;/* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <27>;/* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/*
 * Above Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

/ {
    /*
 * tap dance test
 */

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 1>,
                <&mo 3>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LSHFT>,
                <&kp CAPS>;
        };
    };

    /*
 * mouse conf
 */
    //&mmv {    
    //        time-to-max-speed-ms = <500>;
    //        acceleration-exponent=<1>;
    //};
    //&mwh {    
    //        time-to-max-speed-ms = <2000>;
    //        acceleration-exponent=<0>;
    //};
    /*
 * 
 * to do : template
 *
 */
    /*
 * to do : alias layer 
 */

    #define BASE 0   
#define LOWER 1
#define RAISE 2
#define FUN 3
#define NAV 4
#define ADJUST 5

    /*to do : conditionnal layer
 * 
 *     conditional_layers {
 *         compatible = "zmk,conditional-layers";
 * 
 *         tri_layer {
 *             if-layers = <LOWER RAISE>;
 *             then-layer = <OPTION>;
 *         };
 *     };
 * 
 */
    /*
 * 
 * to do : macros
 *
 * macros {
 *         macro1: macro1 {
 *             compatible = "zmk,behavior-macro";
 *             label = "new_macro";
 *             #binding-cells = <0>;
 *             bindings = <&kp P &kp DOT &kp T &kp KP_MULTIPLY &kp NUMBER_0 &kp NUMBER_9 &kp NUMBER_8 &kp NUMBER_1 &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_9 &kp NUMBER_9 &kp NUMBER_0 &kp NUMBER_2 &kp PLUS &kp T &kp DOT &kp T &kp KP_MULTIPLY &kp PLUS &kp R &kp DOT &kp H>;
 *         };
 *     };
 *
 */
    /*
 * keymap
 */

    combos {
        compatible = "zmk,combos";

        Unlock {
            bindings = <&to 0>;
            key-positions = <11 23 35>;
            timeout-ms = <50>;
            layers = <0 4 5 1 2 6 7 3>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            timeout-ms = <50>;
            layers = <0 1 2 3 7 5 4>;
        };

        up {
            bindings = <&kp UP>;
            key-positions = <8 20>;
            timeout-ms = <50>;
            layers = <0 1 2 3 4 5 7 6>;
            slow-release;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <20 32>;
            timeout-ms = <50>;
            layers = <0 1 2 3 7 5 4>;
        };

        left {
            bindings = <&kp LEFT>;
            key-positions = <19 20>;
            timeout-ms = <50>;
            layers = <0 1 2 3 7 5 4>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <20 21>;
            timeout-ms = <50>;
            layers = <0 1 2 3 7 5 4>;
        };
    };

    macros {
        key: key {
            compatible = "zmk,behavior-macro";
            label = "key";
            #binding-cells = <0>;
            bindings = <&kp W &kp O &kp A &kp I &kp N &kp I &kp N1 &kp N9 &kp N9 &kp N5>;
        };
        mail: mail {
            compatible = "zmk,behavior-macro";
            label = "mail";
            #binding-cells = <0>;
            bindings = <&kp AT &kp M &kp O &kp Z &kp I &kp X &kp U &kp N &kp DOT &kp C &kp O &kp M>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            label = "DEFAULT";
            bindings = <
      &kp CAPS  &kp Q  &kp W     &kp E      &kp R      &kp T           &kp Y        &kp U      &kp I    &kp O     &kp P       &kp BSPC
      &kp LEFT_SHIFT  &kp A  &kp S     &kp D      &kp F      &kp G           &kp H        &kp J      &kp K    &kp L  &kp SEMI       &kp APOS
     &kp LCTRL  &kp Z  &kp X     &kp C      &kp V      &kp B           &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RALT ESC
                              &kp LEFT_SHIFT  &lt 6 TAB  &kp SPACE           &kp RET  &lt 1 SPACE    &lt 4 LEFT_GUI
            >;
        };

        NUMBER {
            label = "MUMBER";
            bindings = <
       &kp ESC     &kp AT        &kp KP_N1  &kp KP_NUMBER_2  &kp KP_NUMBER_3          &kp DOT  &kp F1   &kp F2   &kp F3   &kp F4  &none  &kp BSPC
&kp LEFT_SHIFT  &kp MINUS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6         &kp PLUS  &kp F5   &kp F6   &kp F7   &kp F8  &none     &none
          &key  &kp EQUAL  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp F9  &kp F10  &kp F11  &kp F12  &none     &none
                                                      &mail            &mo 2           &trans  &trans   &trans   &trans
            >;
        };

        SETTING {
            label = "SETTING";
            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &rgb_ug RGB_ON  &rgb_ug RGB_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &rgb_ug RGB_OFF            &to 6    &bt BT_NXT    &bt BT_PRV  &out OUT_BLE  &out OUT_USB  &out OUT_TOG         &none
          &to 0            &to 1            &to 3            &to 4            &to 5            &to 7    &bt BT_CLR         &none         &none         &none         &none         &none
                                                            &trans           &trans           &trans        &trans        &trans        &trans
            >;
        };

        GAME {
            label = "GAME";
            bindings = <
&none  &none  &none   &none   &none   &none   &none   &none   &none  &none  &none  &none
&none  &none  &none   &none   &none   &none   &none   &none   &none  &none  &none  &none
&none  &none  &none   &none   &none  &trans   &none   &none   &none  &none  &none  &none
                     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MEDIA {
            label = "MEDIA";
            bindings = <
&trans  &trans  &kp C_FAST_FORWARD    &kp C_VOLUME_UP  &kp C_REWIND  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &kp C_PREV   &kp C_PLAY_PAUSE    &kp C_NEXT  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans              &trans  &kp C_VOLUME_DOWN        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans        &trans  &trans  &trans  &trans  &trans
            >;
        };

        LOCK {
            label = "LOCK";
            bindings = <
&none  &none  &none   &none   &none   &none   &none   &none   &none  &none  &none  &none
&none  &none  &none   &none   &none   &none   &none   &none   &none  &none  &none  &none
&none  &none  &none   &none   &none  &trans   &none   &none   &none  &none  &none  &none
                     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SYMBOLS {
            label = "SYMBOLS";
            bindings = <
&trans  &kp EXCL  &kp AT  &kp POUND  &kp DLLR  &kp PRCNT   &kp CARET   &kp AMPS       &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans    &trans  &trans     &trans    &trans     &trans   &kp MINUS  &kp EQUAL  &kp UNDERSCORE  &kp LBKT  &kp RBKT  &trans
&trans    &trans  &trans     &trans    &trans     &trans  &kp TILDE2    &kp SQT         &kp DQT  &kp LBRC  &kp RBRC  &trans
                             &trans    &trans     &trans      &trans      &mo 2          &trans
            >;
        };
    };
};
